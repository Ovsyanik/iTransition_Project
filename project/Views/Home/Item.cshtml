@inject IViewLocalizer Localizer

@{
    Item item = Model;
    List<CustomField> fields = ViewData["Field"] as List<CustomField>;
    List<CustomFieldValue> values = ViewData["FieldValue"] as List<CustomFieldValue>;

    string GetCollorLike() {
        if(item.Likes.FirstOrDefault(l => l.UserName == User.Identity.Name) == null)
        {
            return "#ffffff";
        } else
        {
            return "#FF5C7C";
        }
    }
}

<div class="d-flex flex-wrap">
    <div class="col-md-2"></div>
    <div class="col-md-3">
        <strong>@Localizer["Item"]</strong>
        <p>@Localizer["Name"]: @item.Name</p>
        <p>@Localizer["Tags"]: @String.Join(", ", item.Tags)</p>
        <p>@Localizer["Creator"]: @item.Collection.User.Email</p>
        @for (int i = 0; i < fields.Count; i++)
        {
            <p>@fields[i].Title: @item.CustomFieldValues.ElementAt(i).Value</p>
        }
    </div>
    <div class="col-md-1"></div>
    <div class="col-md-1"></div>
    <div class="col-md-3">
        <strong>@Localizer["Collection"]</strong>
        <p>@Localizer["Name"]: @item.Collection.Name</p>
        <p>@Localizer["Theme"]: @item.Collection.Type</p>
        <p>@Localizer["Description"]: @item.Collection.Description</p>
    </div>
    <div class="col-md-2"></div>
</div>
<div class="float-right row" style="margin-top:30px;">
    <div id="likeDiv" style="background-color: @GetCollorLike(); width: 30px; height: 30px; border-radius: 15px;">
        <img onclick="addLike(@item.Id)" src="~/like_icon.png" width="24" style="margin-left: 3px;" height="24" />
    </div>
    <span style="margin-left: 3px;">@Localizer["Likes"]: @item.Likes.Count</span>
</div>

@if (User.Identity.IsAuthenticated)
{
    @*if (item.Collection.User.Email == user.Email @*|| user.Role.Equals(RoleUser.Admin))*@
    //{
        <div style="margin-top: 63px">
            <a class="btn btn-primary"
               asp-controller="Home"
               asp-action="EditItem"
               asp-route-id="@item.Id">@Localizer["EditItem"]</a>

            <button class="btn btn-primary" onclick="showModal()">@Localizer["DeleteItem"]</button>
        </div>
    //}
}

<hr/>

<strong class="text-center">@Localizer["Comments"]</strong>

<div class="container" style="margin-top:15px;">

    <form asp-controller="Home" asp-action="AddComment">
        <div class='row'>
            <div class="col-md-2"></div>
            <div class="input-group col-md-8 row">
                <input type="hidden" name="itemId" value="@item.Id">
                <input type="text" name="text"
                       class="text-center commentInput commentInputHeight"
                       placeholder='@Localizer["WriteComment"]...' />
                <div class="input-group-append" style="width: 25%">
                    <button class="btn btn-primary col-md-12 commentInputHeight" type="submit"
                            style="width: 100%">
                        @Localizer["AddComment"]
                    </button>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
    </form>
</div>


<div class='d-flex flex-column align-items-center p-3' id="comments">
    @if (item.Comments != null)
    {
        foreach (Comment comment in item.Comments)
        {
            <div class='shadow-sm d-flex flex-column align-items-center w-100 mb-4 border rounded'>
                <div class='d-flex flex-column align-items-center w-100 p-1 border-bottom text-secondary'>
                    <em>@comment.Author</em>
                    <em>Created:&nbsp;@comment.CreatedDate</em>
                </div>
                <div className='mw-100 p-3'>
                    <em>@comment.Text</em>
                </div>
            </div>
        }
    }
</div>


<div class="modal fade bs-example-modal-sm" tabindex="-1" id="modal" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Localizer["DeleteItem"]?</h4>
            </div>
            <div class="modal-body">
                <h4 class="modal-content">@Localizer["DeleteItemText"]</h4>
            </div>
            <div class="modal-footer">
                
                <button type="button" class="btn btn-primary"
                        onclick="window.location.href = '@Url.Action("DeleteItem", "Home")?id=' + @item.Id + '&collectionId=' + @item.Collection.Id">Ok</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        let comments = document.querySelector("#comments");
        function requstComments(itemId) {
            axios.post("/Home/GetComments?itemId=" + itemId)
                .then(response => {
                    while (comments.firstChild) {
                        comments.removeChild(comments.firstChild);
                    };
                    let data = Object.values(response.data);
                    data[1].forEach(element => {
                        comments.innerHTML += `<div class='shadow-sm d-flex flex-column align-items-center w-100 mb-4 border rounded'>` +
                            `<div class='d-flex flex-column align-items-center w-100 p-1 border-bottom text-secondary'>` +
                            `<em>${element.author}</em><em>Created:&nbsp;${element.createdDate}</em></div> <div className='mw-100 p-3'>` +
                            `<em>${element.text}</em></div></div>`
                    })
                })
                .catch(error => console.log(error));
        }

        function addLike(id) {
            window.location.href='@Url.Action("AddLike", "Home")?id=' + id;
        }

        function showModal() {
            $('#modal').modal();
        }

        setInterval(requstComments, 5000, @Html.Raw(Json.Serialize(item.Id)));
    </script>
}