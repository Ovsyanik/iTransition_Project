@{
    CustomFieldType[] customFieldTypes = (CustomFieldType[])Enum.GetValues(typeof(CustomFieldType));
}

<link href="../dropzone/dist/min/dropzone.min.css" rel="stylesheet">

@section Header {
    <div class="container">
        <a class="navbar-brand" asp-controller="Home" asp-action="Index">project</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Home" asp-action="Collections">Мои коллекции</a>
                </li>
            </ul>
        </div>

        <div class="float-right">
            <ul class="navbar-nav flex-grow-1">
                @if (User.Identity.IsAuthenticated)
                {
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-controller="Account" asp-action="SignOut">Выйти</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-controller="Account" asp-action="Registration">Регистрация</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-controller="Account" asp-action="Authentication">Логин</a>
                    </li>
                }
            </ul>
        </div>
    </div>
}

<p class="text-center">Добавить коллекцию</p>

<form method="post" asp-controller="Home" asp-action="AddCollectionPost" enctype="multipart/form-data">
    <div class="form-group">
        <label for="name">Name</label>
        <input type="text" class="form-control" id="name" name="name" placeholder="Enter name">
    </div>

    <div class="form-group">
        <label for="theme">Theme</label>
        <select id="theme" name="theme" class="form-control selectpicker" data-style="btn-success" required>
            <option>@TypeItem.Books</option>
            <option>@TypeItem.NewPapers</option>
            <option>@TypeItem.Stamps</option>
        </select>
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <input type="text" class="form-control" id="description" name="description" placeholder="Enter description">
    </div>

    <input type="file" name="files" id="files" />

    <div ondrop="callondrop(event);" ondragover="return false;" style=" height: 300px; width: 600px; background-color: skyblue;">
        <div id="placeholderImg" class="placeHolderMsg">
            <strong>Drag and Drop Files Here</strong>
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <input type="button" class="btn btn-primary" value="Добавить поле" onclick="newField(@Html.Raw(Json.Serialize(customFieldTypes)))" />
        </div>
        <div id="fields" class="col-9"></div>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        let customFieldCount = 0;
        function callondrop(e) {

            e.preventDefault();
            if ((e.dataTransfer && e.dataTransfer.files) || (e.dataTransfer && e.dataTransfer.files)) {
                var files = e.target.files || e.dataTransfer.files;
                $('#files')[0].files = files;
            }

            return false;
        }

        function newField(customFieldTypes) {
            let container = document.getElementById("fields");

            let fieldCount = container.getElementsByTagName("input").length;

            let nextFieldId = fieldCount + 1;

            let div = document.createElement("div");
            div.setAttribute("class", "form-group row");

            let field = document.createElement("input");
            field.setAttribute("class", "form-control");
            field.setAttribute("id", "Fields[" + nextFieldId + "]");
            field.setAttribute("name", "field");
            field.setAttribute("type", "text");

            let typeField = document.createElement("select");
            typeField.setAttribute("class", "form-control selectpicker");
            typeField.setAttribute("id", "FieldsType[" + nextFieldId + "]");
            typeField.setAttribute("name", "newFieldType");
            typeField.setAttribute("data-style", "btn-success");

            for (let i = 0; i < customFieldTypes.length; i++) {
                let typeFieldTypes = document.createElement("option");
                typeFieldTypes.innerHTML = customFieldTypes[i];
                typeField.appendChild(typeFieldTypes);
            }

            div.appendChild(field);
            div.appendChild(typeField);

            container.appendChild(div);
        }
    </script>
}

@*@section Scripts {

            let field = document.createElement("input");
            field.setAttribute("class", "form-control");
            field.setAttribute("id", "Field[" + nextFieldId + "]");
            field.setAttribute("name", "newField");
            field.setAttribute("type", "text");

            //let typeField = document.createElement("select");
            //typeField.setAttribute("class", "form-control selectpicker");
            //typeField.setAttribute("id", "FieldsType[" + nextFieldId + "]");
            //typeField.setAttribute("name", "newFieldType");
            //typeField.setAttribute("data-style", "btn-success");

            //for (let i = 0; i < customFieldTypes.length; i++) {
            //    let typeFieldTypes = document.createElement("option");
            //    typeFieldTypes.innerHTML = customFieldTypes[i];
            //    typeField.appendChild(typeFieldTypes);
            //}



            div.appendChild(field);
            /*        div.appendChild(typeField);*/

            container.appendChild(div);
        }
    </script>
}*@