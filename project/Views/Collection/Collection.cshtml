@*@inject IViewLocalizer Localizer
@{
    IdentityUser user =User.Claims.Role;
    Collection collection = Model;
}

<div class="row">
    <img style="margin-left:4px; margin-top: 5px" src="@collection.PathImage"
         width="160" height="150">
    <div style="margin-left: 15px; height: 150px">
        <h5>@Localizer["DescriptionTitle"]: </h5>
        <p>@collection.Description</p>
        @if (User.Identity.IsAuthenticated)
        {
            if (collection.User.Email == user.Email || user.Role.Equals(RoleUser.Admin))
            {
                <div style="margin-top: 63px">
                    <a class="btn btn-primary"
                       asp-controller="Home"
                       asp-action="AddItem"
                       asp-route-id="@collection.Id">@Localizer["AddItem"]</a>

                    <a class="btn btn-primary"
                       asp-controller="Collection"
                       asp-action="EditCollection"
                       asp-route-id="@collection.Id">@Localizer["EditCollection"]</a>

                    <button class="btn btn-primary" onclick="showModal()">@Localizer["DeleteCollection"]</button>
                </div>
            }
        }
    </div>
</div>

<form method="post" action="@Url.Action("Filter", "Collection")" style="margin-top: 15px">
    <div class="input-group mb-3">
        <input type="hidden" name="collectionId" value="@collection.Id">
        <div class="input-group-prepend">
            <select name="field" class="custom-select" required>
                <option value="Name" selected>@Localizer["Name"]</option>
                <option value="Tags">@Localizer["Tags"]</option>
            </select>
        </div>
        <input type="text" class="form-control" name="text" autocomplete="off">
        <div class="input-group-append">
            <button type="submit" class="btn-outline-secondary btn">@Localizer["Submit"]</button>
        </div>
    </div>
</form>

<table class="table" id="table" style="margin-top: 15px;">
    <thead class="thead-light">
        <tr>
            <th scope="col" onclick="sortById(@collection.Id)">@Localizer["Id"]</th>
            <th scope="col" onclick="sortByName(@collection.Id)">@Localizer["Name"]</th>
            <th scope="col" onclick="">@Localizer["Tags"]</th>
            <th scope="col" onclick="">@Localizer["Likes"]</th>
            @foreach (CustomField customField in collection.Fields)
            {
                <th scope="col">@customField.Title</th>
            }
        </tr>
    </thead>
    <tbody id="bodyTable">
        @if (collection.Items != null)
        {
            foreach (Item item in collection.Items)
            {
                <tr onclick="goToItem(@item.Id)">
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Tags.ListToString()</td>
                    <td>@item.Likes.Count</td>
                    @if (item.CustomFieldValues != null)
                    {
                        foreach (CustomFieldValue customField in item.CustomFieldValues)
                        {
                            <td>@customField.Value</td>
                        }
                    }
                </tr>
            }
        }
    </tbody>
</table>

<div class="modal fade bs-example-modal-sm" tabindex="-1" id="modal" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Localizer["DeleteCollection"]?</h4>
            </div>
            <div class="modal-body">
                <h4 class="modal-content">@Localizer["DeleteCollectionText"]</h4>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="window.location.href = '@Url.Action("DeleteCollection", "Collection")?id=' + @collection.Id" class="btn btn-primary">Ok</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let items = @Html.Raw(Json.Serialize(collection.Items));

        function showModal() {
            $('#modal').modal();
        }

        function goToItem(id) {
            window.location.href='@Url.Action("Item", "Home")?id=' + id;
        }

        function sortById(id) {
            window.location.href='@Url.Action("SortById", "Collection")?id=' + id;
        }

        function sortByName(id) {
            window.location.href='@Url.Action("SortByName", "Collection")?id=' + id;
        }

        function removeAllChild(element) {
            while (element.firstChild) {
                element.remove(element.firstChild);
            }
        }

        document.onclick = function (e) {
            if (event.target.className != 'filterText') {
                if (tags.value != "") {
                    addTag(tags.value);
                    tags.value = "";
                }
            };
        };
    </script>
}*@